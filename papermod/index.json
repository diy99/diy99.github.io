[{"content":" 本文更新日期: 2023-11-01\nHugo特色 Hugo 是用 Go 編寫的靜態網站生成器，一般只需幾秒鐘就能生成一個網站，被稱為「世界上最快的網站構建框架」，也使 Hugo 大受歡迎，成為最熱門的靜態網站生成器之一，被廣泛採用。\n啟動 hugo server 後，寫文章時，網頁瀏覽器就能即時反應成果，不用(重新載入頁面) 。\n一系列的 PaperMod主題設置，是作者的回憶錄\n安裝 Windows 作業系統，建立D:\\App資料夾 安裝Git Bash 前往Hugo的GitHub下載 hugo_extended_0.118.2_windows-amd64.zip (作者下載時的版本)，若看不到 hugo_extended_0.xxx.x_windows-amd64.zip， 按 Show all 23 assets。 解壓縮後，如同wget安裝，將hugo.exe移至 D:\\App\\PortableGit\\usr\\bin\nArch Linux 作業系統\nsudo pacman -S git hugo 其它作業系統，可參閱 Installation | Hugo\n建立網站與安裝主題 參考自 Hugo-Quick Start及PaperMod-Installation 建立 D:\\MyData 資料夾，勿存放資料於 D:\\App\\PortableGit 內。於 git-bash 貼上cd \u0026quot;D:\\MyData\u0026quot; 建立資料夾網站 blog，於 git-bash 貼上hugo new site blog 以檔案總管觀察，blog資料夾內有8個子資料夾及hugo.toml，8個子資料夾只有archetypes內有default.md，其它7個空無一物。default.md及hugo.toml內容很少，正等待修改。空資料夾，正待補充！ 於 git-bash 貼上cd blog 可於 Notepad++ 記下cd \u0026quot;D:\\MyData\\blog\u0026quot;，下次啟動git-bash時貼上 安裝PaperMod主題 於 git-bash 貼上\ngit clone https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth=1 刪除 hugo.toml 將代碼(修改自PaperMod-Sample config.yml 及 PaperMod-exampleSite config.yml)存至 D:\\MyData\\blog\\config.yml，詳細資料可參閱 Configure Hugo 第1行baseURL: \u0026quot;https://examplesite.com/\u0026quot;改為你的\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 baseURL: \u0026#34;https://examplesite.com/\u0026#34; title: ExampleSite defaultContentLanguage: zh-tw paginate: 5 # 每頁顯示的文章數 theme: PaperMod enableInlineShortcodes: true enableRobotsTXT: true # 是否生成 robots.txt 檔案 buildDrafts: false buildFuture: false buildExpired: false enableEmoji: true pygmentsUseClasses: true #googleAnalytics: UA-123-45 minify: disableXML: true #minifyOutput: true params: env: production # to enable google analytics, opengraph, twitter-cards and schema. title: ExampleSite description: \u0026#34;ExampleSite description\u0026#34; keywords: [Blog, Portfolio, PaperMod] author: Me # author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] # multiple authors images: [\u0026#34;\u0026lt;link or path of image for opengraph, twitter-cards\u0026gt;\u0026#34;] DateFormat: \u0026#34;2006-01-02\u0026#34; defaultTheme: auto # dark, light #disableThemeToggle: true ShowReadingTime: true ShowShareButtons: true # 顯示分享文章按鈕 ShowPostNavLinks: true ShowBreadCrumbs: true # 於頂部顯示文章路徑 ShowCodeCopyButtons: true # 顯示代碼複製按鈕 ShowWordCount: true ShowRssButtonInSectionTermList: true UseHugoToc: true #disableSpecial1stPost: true displayFullLangName: true disableScrollToTop: false #comments: false # 評論 hidemeta: false # 是否隱藏文章發布日期、作者... hideSummary: false showtoc: true # 是否顯示目錄 tocopen: true # 是否打開目錄 assets: disableHLJS: true # disableHLJS: true # to disable highlight.js # disableFingerprinting: true favicon: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; favicon16x16: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; favicon32x32: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; apple_touch_icon: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; safari_pinned_tab: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; label: text: \u0026#34;Home\u0026#34; icon: /apple-touch-icon.png iconHeight: 35 # profile-mode profileMode: enabled: false # needs to be explicitly set title: ExampleSite subtitle: \u0026#34;This is subtitle\u0026#34; imageUrl: \u0026#34;\u0026lt;img location\u0026gt;\u0026#34; imageWidth: 120 imageHeight: 120 imageTitle: my image buttons: - name: Posts url: posts - name: Tags url: tags # home-info mode homeInfoParams: Title: \u0026#34;Hi there \\U0001F44B\u0026#34; Content: Welcome to my blog socialIcons: - name: twitter url: \u0026#34;https://twitter.com/\u0026#34; - name: email url: \u0026#34;mailto:\u0026#34; - name: github url: \u0026#34;https://github.com/\u0026#34; #analytics: # google: # SiteVerificationTag: \u0026#34;XYZabc\u0026#34; cover: hidden: true # hide everywhere but not in structured data hiddenInList: true # hide on list pages and home hiddenInSingle: false # hide on single page # for search # https://fusejs.io/api/options.html #fuseOpts: #isCaseSensitive: false #shouldSort: true #location: 0 #distance: 1000 #threshold: 0.4 #minMatchCharLength: 0 #keys: [\u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;, \u0026#34;content\u0026#34;] menu: main: - identifier: categories name: categories url: /categories/ weight: 10 - identifier: tags name: tags url: /tags/ weight: 20 - identifier: example name: example.org url: https://example.org weight: 30 # Read: https://github.com/adityatelange/hugo-PaperMod/wiki/FAQs#using-hugos-syntax-highlighter-chroma markup: goldmark: renderer: unsafe: true highlight: noClasses: false # anchorLineNos: true # codeFences: true # guessSyntax: true # lineNos: true # style: monokai 建立文章 建立文章可參閱 写文章 的詳盡解釋 於 git-bash 貼上hugo new \u0026quot;posts/Hello World.md\u0026quot; 編輯 \\content\\posts\\Hello World.md (省略了D:\\MyData\\blog)，增加兩行\nHello World! ![](https://image.myanimelist.net/ui/BQM6jEZ-UJLgGUuvrNkYUHU1vZBDZ-VTzDhDozp-dH4brc97bzEKibhYrRXD3jZj2Xz-1yT9pOx1fs0V7vHAHQ#center) 本地主機預覽網站 於 git-bash 貼上hugo server -D 開啟瀏覽器，網址貼上 localhost:1313 可於 git-bash 按 Ctrl+C 停止 hugo server\n生成靜態網站 生成靜態網頁於public資料夾內。列出常用的生成方法，參考自 Draft, future, and expired content及启动博客 於 git-bash 貼上hugo 生成方式只會往public資料夾裡添加內容，但是不會刪除外部已經不存在而public裡面還存在的檔案，不含草稿文章 於 git-bash 貼上hugo -D 生成方式包含草稿文章 於 git-bash 貼上hugo -F --cleanDestinationDir 生成的public都是全新的，會覆蓋原來的\n上傳到 GitHub Pages 先完成GitHub SSH 連線 前往 https://github.com/new 建立 GitHub Repository Repository name 一定要填入 your-username.github.io，例如作者的 username 是 diy99，則建立資源庫名稱就要使用 diy99.github.io，設為Public 按 Create repository 於 git-bash 逐行執行下列指令，詳細解釋可參閱 部署 - GitHub Pages diy99/diy99.github.io.git 改為你的 push 時遇到 LF will be replaced by CRLF in ******，可參閱 可能遇到的问题\n1 2 3 4 5 6 7 8 cd public git init git remote add origin git@github.com:diy99/diy99.github.io.git git add . git commit -m \u0026#39;Initial\u0026#39; git branch -M main git push -u origin main cd .. 將指令執行過程存為 D:\\MyData\\blog\\publish.sh，有些指令已執行過，所以使用 # 註解，以後只要 sh publish.sh 即可(Windows 作業系統不用 chmod +x publish.sh)\n1 2 3 4 5 6 7 8 9 10 11 12 13 #!/bin/bash # Linux: chmod +x publish.sh # sh publish.sh hugo cd public #git init #git remote add origin git@github.com:your-username/your-username.github.io.git git add . git commit -m \u0026#39;Update\u0026#39; #git branch -M main #git push -u origin main git push cd .. 瀏覽 https://your-username.github.io\n文章的 Front Matter 本段內容參考資料 貼身打造個人部落格 - 02. 文章 Front Matter PaperMod-Sample Page.md 写文章 PaperMod 主題 | 小M平碎碎念 Front matter | Hugo\nFront Matter 指的是: 每篇文章檔案內容中，放在最前面那塊以---分隔的內容。 建立新文章(hugo new \u0026ldquo;posts/My First Post.md\u0026rdquo;)時，Hugo會從 \\archetypes (省略了D:\\MyData\\blog) 複製模板 default.md 新建文章 將底下代碼取代 \\archetypes\\default.md 的內容 實際上，新建文章時，你可能要小部分更改\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 --- title: \u0026#39;{{ replace .File.ContentBaseName \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#39; date: {{ .Date }} draft: false # 文章草稿狀態 summary: \u0026#34;\u0026#34; # 首頁顯示的文字總結段落 categories: [\u0026#34;分類1\u0026#34;, \u0026#34;分類2\u0026#34;] tags: [\u0026#34;標籤1\u0026#34;, \u0026#34;標籤2\u0026#34;] #author: [\u0026#34;Author\u0026#34;] #keywords: [Blog, PaperMod] # 標示文章的關鍵字 description: \u0026#34;\u0026#34; #描述 weight: # 輸入1可以置頂文章，不填就按時間 isCJKLanguage: true # 是否是中文(chinese,japanese,korea) 字數判斷用 comments: false #是否展示評論 showToc: true # 顯示目錄 TocOpen: false # 自動打開目錄 UseHugoToc: true hidemeta: false # 是否隱藏發布日期、作者 disableShare: false # 取消社群分享文章欄 showbreadcrumbs: true # 於頂部顯示文章路徑 ShowWordCounts: true ShowReadingTime: true cover: image: \u0026#34;\u0026#34; # 封面圖片路徑 alt: \u0026#34;\u0026lt;alt text\u0026gt;\u0026#34; # alt text caption: \u0026#34;\u0026#34; # 封面圖片描述 relative: false # when using page bundles set this to true hidden: false # only hide on current single page --- 作者在 config.yml 設置 author: [\u0026ldquo;Jang\u0026rdquo;] ，所以網站文章預設作者是 Jang，本篇文章的 Front Matter 設置 author: [\u0026ldquo;Shakespeare\u0026rdquo;] ，所以…😊\n以 Notepad++ 記下\ncd \u0026#34;D:\\MyData\\blog\u0026#34; hugo new \u0026#34;posts/Hello World.md\u0026#34; hugo server -D localhost:1313 Git Bash 可以使用方向鍵 存取先前輸入的指令\n待續…，務必要參閱 PaperMod 選單\n","permalink":"https://diy99.github.io/papermod/posts/hugo-papermod/","summary":"本文更新日期: 2023-11-01 Hugo特色 Hugo 是用 Go 編寫的靜態網站生成器，一般只需幾秒鐘就能生成一個網站，被稱為「世界上最快的網站構建框架」，也使 Hugo 大受歡迎","title":"📌 Hugo PaperMod 與 GitHub Pages"},{"content":"在 Windows 系統使用 Crystaldiskinfo 作硬碟健康檢查，以利在損壞前備份。在 Linux 系統可用 smartmontools 安裝\n$ sudo pacman -S smartmontools 檢查硬碟\n$ sudo smartctl -a /dev/sda smartctl 7.4 2023-08-01 r5530 [x86_64-linux-6.6.4-arch1-1] (local build) Copyright (C) 2002-23, Bruce Allen, Christian Franke, www.smartmontools.org === START OF INFORMATION SECTION === Model Family: Toshiba 3.5\u0026#34; DT01ACA... Desktop HDD Device Model: TOSHIBA DT01ACA050 Serial Number: 83HSGGTGS LU WWN Device Id: 5 000039 ff0d8c262 Firmware Version: MS1OA750 User Capacity: 500,107,862,016 bytes [500 GB] Sector Sizes: 512 bytes logical, 4096 bytes physical Rotation Rate: 7200 rpm Form Factor: 3.5 inches Device is: In smartctl database 7.3/5528 ATA Version is: ATA8-ACS T13/1699-D revision 4 SATA Version is: SATA 3.0, 6.0 Gb/s (current: 6.0 Gb/s) Local Time is: Fri Dec 15 11:04:00 2023 UTC SMART support is: Available - device has SMART capability. SMART support is: Enabled === START OF READ SMART DATA SECTION === SMART overall-health self-assessment test result: PASSED ","permalink":"https://diy99.github.io/papermod/posts/smartmontools/","summary":"在 Windows 系統使用 Crystaldiskinfo 作硬碟健康檢查，以利在損壞前備份。在 Linux 系統可用 smartmontools 安裝 $ sudo pacman -S smartmontools 檢查硬碟 $ sudo smartctl -a /dev/sda smartctl 7.4 2023-08-01 r5530 [x86_64-linux-6.6.4-arch1-1] (local build) Copyright (C) 2002-23, Bruce Allen, Christian Franke, www.smartmontools.org === START OF INFORMATION SECTION === Model Family:","title":"Arch Linux smartmontools  硬碟健康檢查"},{"content":"Windows 電腦和 Android 裝置之間以 USB 傳輸檔案，可參閱 在電腦和Android 裝置之間傳輸檔案。作者參閱 Media Transfer Protocol 與 连接Android手机到ArchLinux上，整理 Arch Linux 和 Android 裝置之間以 USB 輕易傳輸檔案。\n安裝 MTPfs 與 Android File Transfer\nsudo pacman -Sy mtpfs android-file-transfer 建立 ~/tmp 目錄，掛載手機至 ~/tmp (如果要自動掛載，此步驟可不作)\nmkdir ~/tmp aft-mtp-mount ~/tmp 例如開啟檔案管理員 pcmanfm-qt 缷載\nfusermount -u ~/tmp 安裝 gvfs-mtp 自動掛載 (可能需要重新開機)\nsudo pacman -Sy gvfs-mtp ","permalink":"https://diy99.github.io/papermod/posts/usb-android/","summary":"Windows 電腦和 Android 裝置之間以 USB 傳輸檔案，可參閱 在電腦和Android 裝置之間傳輸檔案。作者參閱 Media Transfer Protocol 與 连接Android手机到ArchLinux上，","title":"Arch Linux 和 Android 裝置之間傳輸檔案 "},{"content":" 影音播放器(Media Player)是專為播放影片打造的APP，以瀏覽器播放影片，效果難免略遜一籌，但須要瀏覽器偵測影片網址(安裝擴充套件)。PotPlayer、MPC-BE、MPC-HC、VLC、SMPlayer(跨平臺APP) 是 Windows 作業系統免費影音播放器主流，PortableApps.com Platform 已有這些 APP，但可能是 32 位元。\n自製可攜式 PotPlayer PotPlayer 以前有段時間作置入性廣告，若再有此情況，可考慮使用舊版或其它影音播放器。PotPlayer 功能眾多，需耐心體會。\nPotPlayer 安裝 前往 PotPlayer官網，點選「64bit DOWNLOAD」(依照你的作業系統下載適合的版本) 執行下載的 安裝程式 使用預設的語言，點選「OK」 點選「下一步」 點選「我同意」 使用預設的選項，點選「下一步」；可以依照個人需要選擇檔案關聯的選項 使用預設的安裝路徑，點選「安裝」 安裝完成，點選「關閉」，安裝額外的編解碼器並執行PotPlayer 點選「我接受」，準備安裝解碼器 勾選全部解碼器，點選「下一步」 點選「安裝」 解碼器安裝完成，點選「關閉」 觀察開啟的PotPlayer 5秒鐘，是否置入廣告。 點選左上角PotPlayer 點選「結束」\n可攜式 PotPlayer 安裝完就是可攜版，底下設定僅增加靈活性。 建立資料夾 D:\\App，將資料夾 C:\\Program Files\\DAUM\\PotPlayer 複製至 D:\\App 內，解除 C:\\Program Files\\DAUM\\PotPlayer 程式。於資料夾 D:\\App 內，建立 D:\\App\\PotPlayer\\PotPlayerMini64.exe 捷徑。 開啟 PotPlayer，點選左上角PotPlayer 點選「偏好設定」（前面兩步驟可直接按快捷鍵F5取代） 點選「基本」 多重執行方式 選擇「允許多個 PotPlayer 同時執行」 自動更新 選擇「關閉」 取消勾選「預先下載更新檔案」 勾選「將設定檔儲存到 INI 檔案」 點選「套用」 點選「確定」 以上設定產生 PotPlayer.ini，因此可複製第二份PotPlayer（因為PotPlayer.ini內容可以不同）。重新安裝新版 PotPlayer 時，再複製至 D:\\App 內，即可更新。 播放清單是 PotPlayer 的特色功能。 F6 是播放清單的顯示開關，若未顯示播放清單，按快捷鍵 F6，而再按一次 F6，則隱藏播放清單。記註並善用 F6，讓你更方便。全螢幕選擇播放清單的影片時，更是得心應手。 播放清單的本機是本地主機（loaclhost）簡稱，就是你正在使用中的電腦。 點選播放清單的本機右邊 播放清單名 填入『直播』 點選「確定」，就增加了『直播』的播放清單。\nPotPlayer功能 播放YouTube影片 播放網路影片，原需取得 .m3u8 檔。PotPlayer 可解析YouTube網址（也可以解析播放清單） 例如 台灣第一米倉葫蘆墩 網址\nhttps://www.youtube.com/watch?v=pGtIc2TG-A0 複製上面網址，於 PotPlayer 點選「預設清單」 於「預設清單」下的區域按滑鼠右鍵 滑鼠指標移至「新增 \u0026amp; 編輯」 點選「新增連結」 按「Ctrl+V」貼上網址 勾選「儲存使用者輸入的位址至清單中」與「預設使用剪貼簿中的可用位址」 點選「確定」 點選「台灣第一米倉葫蘆墩 - 台中市豐原區」 按 P 即可播放影片 點選影片右下角解析度的按鈕 選擇「1080P, 30F(webm;, vp9)」〈依個人需要選擇影片的解析度〉 練習 臺中縣合併前 3市5鎮13鄉 播放清單網址\nhttps://www.youtube.com/watch?v=t3aASzMOvv4\u0026amp;list=PLF-0izTZ06nA1FRsj_SDawBepc3DAOfbX YouTube直播 台視新聞台HD 24 小時線上直播 網址\nhttps://www.youtube.com/watch?v=xL0ch83RAK8 偵測 .m3u8 Firefox The Stream Detector，Chrome The Stream Detector 。 以 hls.js demo 偵測得 m3u8 為例\nhttps://test-streams.mux.dev/x36xhzz/x36xhzz.m3u8 複製上面網址，於 PotPlayer 點選「預設清單」 於「預設清單」下的區域按滑鼠右鍵 滑鼠指標移至「新增 \u0026amp; 編輯」 點選「新增連結」 點選「確定」。…，完成播放影片。 可建立『電影』播放清單，再新增 hls.js demo 的 m3u8 於『電影』播放清單。\n","permalink":"https://diy99.github.io/papermod/posts/media-player/","summary":"影音播放器(Media Player)是專為播放影片打造的APP，以瀏覽器播放影片，效果難免略遜一籌，但須要瀏覽器偵測影片網址(安裝擴充套件)","title":"自製可攜式(免安裝) PotPlayer"},{"content":"網頁瀏覽器(Web Browser，常簡稱為瀏覽器)是用於存取全球資訊網(World Wide Web，簡稱 WWW 或 Web)資訊系統的應用程式，這些資訊可為網頁、圖片、影音或其他內容。 建議於 PortableApps.com平臺 安裝 Firefox、Chrome (跨平臺APP) 相關資訊 - https://diii.neocities.org/webvideo/browser\nFirefox 惱人廣告是觀賞網路影片的夢魘，安裝 uBlock Origin 可阻擋大部分廣告。 擴充套件取得影片網址 .m3u8，於影音播放器播放 The Stream Detector HLS Downloader\nChrome 惱人廣告是觀賞網路影片的夢魘，安裝 uBlock Origin 可阻擋大部分廣告。 擴充功能取得影片網址 .m3u8，於影音播放器播放 CocoCut Stream Recorder (只能下載影片) HLS Downloader 擴充功能LINE網頁版\n","permalink":"https://diy99.github.io/papermod/posts/web-browser/","summary":"網頁瀏覽器(Web Browser，常簡稱為瀏覽器)是用於存取全球資訊網(World Wide Web，簡稱 WWW 或 Web)資訊系統的應用程式，這些資訊可為","title":"Firefox與Chrome網頁瀏覽器"},{"content":"Windows作業系統的維護至關重要，重新安裝是個夢魘，因此也如手機一樣，提供「恢復原廠設定」。無論是重新安裝或恢復原廠設定，都要作Windows系統設定及備份資料。已停產的 Norton Ghost 就是解決惱人的重新Windows系統設定，作者介紹免費的替代APP。 相關資料：系統還原與重設此電腦、WinPE是什麼?\n備份系統前 清理資源回收筒 資源回收筒會佔用 Windows 系統(C槽)，可用 7-Zip 查得隱夾資料夾 C:\\$Recycle.Bin\nWindows系統優化 不滿意 Windows設定功能的預設，可參閱 【教學】Windows 10 系統優化 【教學】Windows 11 系統優化\nC槽的使用者資料夾改到D槽 使用者資料夾就在C槽，如：放置在桌面的資料夾及檔案…，避免還原系統(C槽)時檔案不見，可參閱 C槽的使用者資料夾改到D槽\n停止自動更新 Windows 自動更新後，系統檔臃腫了，甚至速度變慢了，可參閱 關閉Win10自動更新 (要關閉Win11自動更新，可作參考)\nPortableApps.com平台APP Wise Program Uninstaller 除了有安全移除軟體模式，更有強制移除模式，特別適合移除無法透過一般的移除方式，或安全移除模式的軟體。\nWise Registry Cleaner 電腦跑得比以前還慢呢？有可能是因為登錄檔的垃圾所導致。這套軟體可以執行登錄檔的掃描及清理，清理前預設還會自動備份登錄檔，還有一鍵系統最佳化、登錄檔重組功能。\nSmart Defrag 磁碟重組可以將分散的檔案，集中在同一區塊，提升磁碟的效能，改善電腦越來越慢。\nUSB開機隨身碟製作 Windows 無法運作或重新安裝時必備 Ventoy USB開機隨身碟製作，Ventoy 教學 Rufus開機隨身碟製作(可用PortableApps.com平台安裝)，Rufus 教學 如何從USB隨身碟/光碟機中開機 【教學】如何設定usb隨身碟開機 硬碟分割與調整工具 一般而言，只有一顆硬碟而安裝Windows時，就只有C槽。參閱 硬碟分割與調整工具 增加D槽，以存放可攜式(portable,又稱免安裝)APP及資料。\nWinPE WinPE 是 Windows Preinstallation Environment 的縮寫(中文 Windows 預先安裝環境)，簡化版的Microsoft Windows，放在一片可直接啟動的CD或DVD光碟或者隨身碟，以載入到記憶體的方式執行，主要用於系統維護。\nDiskGenius 製作 WinPE 下載DiskGenius (繁體中文、简体中文) 制作DiskGenius WinPE USB启动盘 教程 DiskGenius 无损分区大小调整 教程 备份分区 教程 从镜像文件还原分区 教程 免費，DiskGenius 就可搞定備份與還原系統及調整分區，可於 Windows 及 WinPE 執行\nEasyU - WinPE製作工具 參閱 EasyU官網FAQ 關閉Defender即時保護 下載 EasyU 開啟 EasyU_v3.7.exe (v3.7是版本號) 按 [生成鏡像] ➜ [生成鏡像] 按 [確定] ➜ … 開啟Defender即時保護 Ventoy 製成 USB開機隨身碟 💾 EasyU 可以備份還原Windows作業系統 Easy Image X2 快速分区-恢复镜像\nUSBOX - WinPE製作工具 下載 USBOX ISO 檔 Ventoy 製成 USB開機隨身碟 💾 USBOX 可以備份還原Windows作業系統\n使用微軟官網資料製作 WinPE 參閱 製作屬於自己的WinPE (含 中文/臺灣 語系) 作者討厭 繁體字 這命名，因為沿用氾濫。Traditional Chinese 一詞 Google與Bing 皆翻譯為繁體中文，但 Traditional 是傳統之意。在 Google Chrome 的語言設定，有 英文 - English, 英文(英國) - English(United Kingdom)，中文(繁體), 中文(香港), 中文(簡体)。中文(繁體)應當是中文(臺灣)，如同 中文(香港)，所有小括號內指的是地區，不是國家。臺灣與中國大陸使用相同名詞嗎？電腦術語：臺灣『檔案』與中国大陆『文件』🙄。勿作政治解讀！\n備份與還原Windows作業系統 Windows系統無法運作時，須要 WinPE 開機，再以還原系統APP(如：Norton Ghost)還原Windows作業系統。國外能於 WinPE 執行的還原系統APP，只有付費軟體。\n易数一键还原 下載 易数一键还原，易數一鍵還原基於 DiskGenius 内核開發 【教學】如何安裝易數一鍵還原 易數一鍵還原／操作說明 隱藏檔可用 7-Zip 檢視，於 cmd 可用 attrib 隱藏檔案或資料夾 免費，可於 Windows 及 WinPE 執行。複製 C:\\Program Files\\易數一鍵還原 資科夾 至 D:\\App 資科夾內，以防C槽毀損。\nOneKey一键还原 下載 OneKey一键还原 以 Norton Ghost 為基礎，此版本乎太舊了\nEaseUS Todo Backup Free 下載 EaseUS Todo Backup Free 硬碟備份 — 備份所有內容 - EaseUS 只能於 Windows 執行，要在 WinPE 執行，須升級付費版。\n","permalink":"https://diy99.github.io/papermod/posts/windows-tool/","summary":"Windows作業系統的維護至關重要，重新安裝是個夢魘，因此也如手機一樣，提供「恢復原廠設定」。無論是重新安裝或恢復原廠設定，都要作Wind","title":"Windows 系統維護"},{"content":"PortableApps.com平台提供各種免費、可攜式APP，當使用者更新、遷移應用程式時，個人資料不受影響。 相關資料: 方便你隨身攜帶的好軟體 PortableApps\n下載與安裝 建立D槽，沒有D槽可參閱硬碟分割與調整 前往 https://portableapps.com/zh-tw 下載 PortableApps.com_Platform_Setup_26.3.1.paf.exe (26.3.1是作者下載時版本) 開啟 PortableApps.com_Platform_Setup_26.3.1.paf.exe ➜ OK ➜ 下一步(N) ➜ 我同意(A) ➜ 勾選 「選擇自訂位置…」➜ 下一步(N) ➜ 目標資料夾輸入 D:\\Portableapps (可更改) ➜ 下一步(N) ➜ 安裝(I) ➜ 完成(F) 勾選 要安裝的可攜軟體(不少APP同時安裝Win32與Win64)，列出作者的供參考\n圖像和圖片 FastStone Image Viewer (看圖軟體與播放影片) Gimp (點陣圖圖像編輯器) Inkscape (向量圖形編輯器，圖形放大或旋轉後，邊緣不會產生鋸齒狀) 實用工具 7-Zip (壓縮與解壓縮，64位元與32位元同時安裝) CPU-Z (硬體資訊偵測) CrystalDiskInfo (每顆硬碟都應檢查健康狀況，以利在損壞前備份) Everything (取代Windows搜尋功能) FileOptimizer (在無損狀態下將檔案壓縮到最小) Rufus (製作可開機USB 隨身碟) Smart Defrag (硬碟重組) Wise Data Recovery (救回從資源回收筒刪除的檔案) Wise Program Uninstaller (安全且完全移除不要的程式) Wise Registry Cleaner (登錄檔清理) 網路工具 Firefox (網頁瀏覽器) Google Chrome (網頁瀏覽器) 辦公 LibreOffice Still (替代 MS Office， 分享作者的LibreOffice檔案) PDF-XChange Viewer (檢視PDF檔案) 下一步(N) ➜ … ➜ 完成(F) 啟動 Gimp，完成 Gimp 中文化 Google Chrome 是32位元，可至 Google Chrome Portable 64-bit Stable (Test) 下載64位元，於 PortableApps.com平台 ➜ 管理軟體(A) ➜ 安裝新的可攜軟體(I) [paf.exe] ➜ 選取下載的 .paf.exe\n建立捷徑 在桌面或D:\\App建立 D:\\Portableapps\\Start.exe 捷徑，以便下次迅速啟動 PortableApps.com平台 作者啟動 PortableApps.com平台 時，僅是更新APP，因此建立捷徑迅速啟動APP(僅供參考) 於D:\\App建立APP捷徑(只列出部分)\nD:\\Portableapps\\PortableApps\\LibreOfficePortablePrevious\\LibreOfficeWriterPortable.exe D:\\Portableapps\\PortableApps\\LibreOfficePortablePrevious\\LibreOfficeCalcPortable.exe D:\\Portableapps\\PortableApps\\GoogleChromePortable\\GoogleChromePortable.exe ","permalink":"https://diy99.github.io/papermod/posts/portableapps.com-platform/","summary":"PortableApps.com平台提供各種免費、可攜式APP，當使用者更新、遷移應用程式時，個人資料不受影響。 相關資料: 方便你隨身攜帶的好","title":"PortableApps.com Platform"},{"content":"\r先完成 Arch Linux Base Install - 基礎安裝 官網KDE，作者 bash 檔 kde.txt\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 #!/bin/bash #-------------------------------- # Created by chuanjang(at)gmail(dot)com # Download: wget https://diii.neocities.org/kde.txt # Usage: # chmod +x kde.txt # sh kde.txt # COLORS Reset=$(tput sgr0) # Regular Colors Red=$(tput setaf 1) Green=$(tput setaf 2) Yellow=$(tput setaf 3) Purple=$(tput setaf 5) Cyan=$(tput setaf 6) print_line() { #{{{ printf \u0026#34;%$(tput cols)s\\n\u0026#34;|tr \u0026#39; \u0026#39; \u0026#39;-\u0026#39; } #}}} read_input_text() { #{{{ read -p \u0026#34;$1 [y/N]: \u0026#34; OPTION OPTION=`echo \u0026#34;$OPTION\u0026#34; | tr \u0026#39;[:upper:]\u0026#39; \u0026#39;[:lower:]\u0026#39;` } #}}} pause_function() { #{{{ print_line read -e -sn 1 -p \u0026#34;Press enter to continue...\u0026#34; } #}}} sudo sh -c \u0026#34;pacman -Syu --noconfirm\u0026#34; #Media Driver for Nvidia #sudo sh -c \u0026#34;pacman -S nvidia nvidia-settings --noconfirm\u0026#34; #Xorg and pipewire low-level multimedia framework sudo sh -c \u0026#34;pacman -S xorg-server pipewire --noconfirm\u0026#34; echo -e \u0026#34;\\n\\n\u0026#34; #KDE desktop, plasma-meta, plasma, plasma-desktop PS3=\u0026#34;Select {Cyan}KDE desktop environment${Reset} package please: \u0026#34; items=(\u0026#34;plasma-meta\u0026#34; \u0026#34;plasma\u0026#34; \u0026#34;plasma-desktop\u0026#34;) select item in \u0026#34;${items[@]}\u0026#34; do case $REPLY in 1) break;; 2) break;; 3) break;; #$((${#items[@]}+1))) echo \u0026#34;We\u0026#39;re done!\u0026#34;; break;; *) echo \u0026#34;Ooops - unknown choice $REPLY\u0026#34;;; esac done sudo sh -c \u0026#34;pacman -S $item kde-applications plasma-wayland-session --noconfirm\u0026#34; #Display Manager (SDDM) sudo sh -c \u0026#34;pacman -S --noconfirm sddm\u0026#34; #Autologin sudo sh -c \u0026#34;mkdir -p /etc/sddm.conf.d\u0026#34; sudo sh -c \u0026#34;echo \u0026#39;[Autologin]\u0026#39; \u0026gt;\u0026gt; /etc/sddm.conf.d/autologin.conf\u0026#34; sudo sh -c \u0026#34;echo \u0026#39;User=$USER\u0026#39; \u0026gt;\u0026gt; /etc/sddm.conf.d/autologin.conf\u0026#34; sudo sh -c \u0026#34;echo \u0026#39;Session=plasma\u0026#39; \u0026gt;\u0026gt; /etc/sddm.conf.d/autologin.conf\u0026#34; sudo sh -c \u0026#34;echo \u0026#39;[General]\u0026#39; \u0026gt;\u0026gt; /etc/sddm.conf\u0026#34; sudo sh -c \u0026#34;echo \u0026#39;Numlock=on\u0026#39; \u0026gt;\u0026gt; /etc/sddm.conf\u0026#34; sudo sh -c \u0026#34;systemctl enable sddm\u0026#34; echo -e \u0026#34;\\n${Cyan}SDDM${Reset} installed and set ${Green}Autologin${Reset} \u0026amp; ${Green}NumLock${Reset}\\n\u0026#34; pause_function wget https://diii.neocities.org/localize.txt chmod +x localize.txt sh localize.txt rm -rf localize.txt echo -e \u0026#34;\\nMust reboot to enable setting.\u0026#34; pause_function reboot exit 0 安裝 以具有 sudo 權限之使用者登入 wget https://diii.neocities.org/kde.txt chmod +x kde.txt sh kde.txt\n後續 重啟後自動登入, 可刪除 chi_in.txt, fonts.txt, kde.txt, setlang.txt, 也可以使用文字編輯器查看 顯示管理器SDDM已安裝並設置自動登入、啟用數字鎖定鍵\nArch 使用者儲存庫 (AUR) 於 Konsole\nsudo pacman -S git fakeroot make git clone https://aur.archlinux.org/yay.git cd yay makepkg -si cd .. 例：安裝 Google Chrome\nyay -S google-chrome ","permalink":"https://diy99.github.io/papermod/posts/kde/","summary":"先完成 Arch Linux Base Install - 基礎安裝 官網KDE，作者 bash 檔 kde.txt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47","title":"Arch Linux KDE 安裝+SDDM自動登入+Fcitx5輸入法"},{"content":" 上圖，bash 執行過程 简体中文参阅 [bash]基础安装 作者的 bash 檔 install.txt\nbin/bash #------------------------------------------------------------------------------- #Created by helmuthdu mailto: helmuthdu[at]gmail[dot]com #------------------------------------------------------------------------------- #This program is free software: you can redistribute it and/or modify #it under the terms of the GNU General Public License. #------------------------------------------------------------------------------- # Modified for ArchBang by Mr Green mrgreen(at)archbang(dot)org # Modified by chuanjang(at)gmail(dot)com # #Usage: #curl -O https://diii.neocities.org/install.txt #nano install.txt OR vim install.txt #sh install.txt # COLORS Bold=$(tput bold) Underline=$(tput sgr 0 1) Reset=$(tput sgr0) # Regular Colors Red=$(tput setaf 1) Green=$(tput setaf 2) Yellow=$(tput setaf 3) Blue=$(tput setaf 4) Purple=$(tput setaf 5) Cyan=$(tput setaf 6) White=$(tput setaf 7) # Bold BRed=${Bold}$(tput setaf 1) BGreen=${Bold}$(tput setaf 2) BYellow=${Bold}$(tput setaf 3) BBlue=${Bold}$(tput setaf 4) BPurple=${Bold}$(tput setaf 5) BCyan=${Bold}$(tput setaf 6) BWhite=${Bold}$(tput setaf 7) arch_chroot() { #{{{ arch-chroot /mnt /bin/bash -c \u0026#34;${1}\u0026#34; } #}}} check_root() { #{{{ if [[ \u0026#34;$(id -u)\u0026#34; != \u0026#34;0\u0026#34; ]]; then error_msg \u0026#34;ERROR! You must execute the script as the \u0026#39;root\u0026#39; user.\u0026#34; fi } #}}} print_line() { #{{{ printf \u0026#34;%$(tput cols)s\\n\u0026#34;|tr \u0026#39; \u0026#39; \u0026#39;-\u0026#39; } #}}} print_title() { #{{{ clear print_line echo -e \u0026#34;# ${Bold}$1${Reset}\u0026#34; print_line echo \u0026#34;\u0026#34; } #}}} read_input_text() { #{{{ read -p \u0026#34;$1 [y/N]: \u0026#34; OPTION OPTION=`echo \u0026#34;$OPTION\u0026#34; | tr \u0026#39;[:upper:]\u0026#39; \u0026#39;[:lower:]\u0026#39;` } #}}} pause_function() { #{{{ print_line read -e -sn 1 -p \u0026#34;Press enter to continue...\u0026#34; } #}}} print_warning() { #{{{ T_COLS=`tput cols` echo -e \u0026#34;${BYellow}$1${Reset}\\n\u0026#34; | fold -sw $(( $T_COLS - 1 )) } #}}} error_msg() { #{{{ local _msg=\u0026#34;${1}\u0026#34; echo -e \u0026#34;${_msg}\u0026#34; exit 1 } #}}} create_new_user(){ #{{{ print_title \u0026#34;CREATE USER HAVE $(tput setaf 2)SUDO $(tput sgr0)$(tput bold)PRIVILEGES\u0026#34; while [[ -z \u0026#34;$username\u0026#34; ]]; do read -p \u0026#34;username: \u0026#34; username username=`echo $username | tr \u0026#39;[:upper:]\u0026#39; \u0026#39;[:lower:]\u0026#39;` if [ -z \u0026#34;$username\u0026#34; ] ; then print_warning \u0026#34;username empty, don\u0026#39;t create user.\\n\u0026#34; fi done arch_chroot \u0026#34;useradd -m -g users -G wheel -s /bin/bash ${username}\u0026#34; #arch_chroot \u0026#34;chfn ${username}\u0026#34; arch_chroot \u0026#34;passwd ${username}\u0026#34; while [[ $? -ne 0 ]]; do arch_chroot \u0026#34;passwd ${username}\u0026#34; done #arch_chroot \u0026#34;visudo\u0026#34; arch_chroot \u0026#34;chmod 777 /etc/sudoers\u0026#34; arch_chroot \u0026#34;echo \u0026#39;%wheel ALL=(ALL:ALL) ALL\u0026#39; \u0026gt;\u0026gt; /etc/sudoers\u0026#34; arch_chroot \u0026#34;chmod 440 /etc/sudoers\u0026#34; } #}}} # Verify the boot mode if [[ -d \u0026#34;/sys/firmware/efi/\u0026#34; ]]; then echo -e \u0026#34;${Cyan}UEFI${Reset} Mode detected\\n\u0026#34; UEFI=true else echo -e \u0026#34;${Cyan}BIOS Mode${Reset} detected\\n\u0026#34; UEFI=false fi pause_function # Connect to the internet ip link # Verify connection ping -c 1 archlinux.org echo -e \u0026#34;\\n${Cyan}Connection${Reset} verified\u0026#34; read_input_text \u0026#34;Continue or not\u0026#34; if [[ $OPTION != y ]]; then echo -e \u0026#34;\\n\\nExit\u0026#34; exit 0 fi # Ensure the system clock is accurate: #timedatectl # Partition the disks. To identify these devices, use lsblk #fdisk /dev/sda if $UEFI ; then echo -e \u0026#34;\\n${Purple}UEFI${Reset}. Format and mount\\n\u0026#34; mkfs.fat -F32 /dev/sda1 mkfs.ext4 -F /dev/sda2 mount /dev/sda2 /mnt mount --mkdir /dev/sda1 /mnt/boot else echo -e \u0026#34;\\n${Purple}BIOS${Reset}. Format and mount\\n\u0026#34; BOOT_MNT=\u0026#34;/dev/sda\u0026#34; mkfs.ext4 -F /dev/sda1 mount /dev/sda1 /mnt fi # Select the mirrors - https://archlinux.org/mirrors/status/ echo -e \u0026#34;\\n\\n\u0026#34; PS3=\u0026#34;Select ${Purple}mirror region${Reset}: \u0026#34; items=(\u0026#34;China\u0026#34; \u0026#34;Taiwan\u0026#34;) select item in \u0026#34;${items[@]}\u0026#34; do case $REPLY in 1) reflector --verbose --latest 10 --sort rate --country china --save /etc/pacman.d/mirrorlist break ;; 2) reflector --verbose --latest 10 --sort rate --country taiwan --save /etc/pacman.d/mirrorlist break ;; #$((${#items[@]}+1))) echo -e \u0026#34;\\n${Red}Cancel${Reset}\u0026#34;; break;; *) echo -e \u0026#34;Invalid option ${Red}$REPLY${Reset}\u0026#34;;; esac done # Install essential packages and ... pacstrap /mnt base linux linux-firmware sudo networkmanager wget nano vim dhcpcd # Configure the system genfstab -U /mnt \u0026gt;\u0026gt; /mnt/etc/fstab echo -e \u0026#34;\\n\\nChange root into the new system and ...\u0026#34; pause_function #Set the time zone #arch_chroot \u0026#34;ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\u0026#34; #arch_chroot \u0026#34;ln -sf /usr/share/zoneinfo/Asia/Taipei /etc/localtime\u0026#34; #Assumes the hardware clock is set to localtime #arch_chroot \u0026#34;hwclock --systohc --localtime\u0026#34; #Set language U.S. English arch_chroot \u0026#34;sed -i \u0026#39;/#en_US.UTF-8/{s/#//}\u0026#39; /etc/locale.gen\u0026#34; arch_chroot \u0026#34;locale-gen\u0026#34; arch_chroot \u0026#34;echo \u0026#39;LANG=en_US.UTF-8\u0026#39; \u0026gt; /etc/locale.conf\u0026#34; #Create the hostname file arch_chroot \u0026#34;echo archlinux \u0026gt; /etc/hostname\u0026#34; # Configure mkinitcpio arch_chroot \u0026#34;mkinitcpio -p linux\u0026#34; echo -e \u0026#34;\\nSet the root password\u0026#34; arch_chroot \u0026#34;passwd\u0026#34; # Enable NetworkManager arch_chroot \u0026#34;systemctl enable NetworkManager\u0026#34; # Enable network connect echo -e \u0026#34;\\nEnable Ethernet plug in the cable\\n\u0026#34; arch_chroot \u0026#34;systemctl enable dhcpcd\u0026#34; create_new_user # Install Grub read_input_text \u0026#34;Install GRUB boot loader:\u0026#34; if [[ $OPTION != y ]]; then #arch-chroot /mnt echo -e \u0026#34;\\n\\n${Red}Must${Reset} install boot loader.\\n\u0026#34; exit 0 fi # Microcode must be loaded by the boot loader, Intel processors or AMD processors arch_chroot \u0026#34;pacman -S intel-ucode amd-ucode --noconfirm\u0026#34; arch_chroot \u0026#34;pacman -S grub os-prober efibootmgr --noconfirm\u0026#34; if $UEFI ; then arch_chroot \u0026#34;grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB\u0026#34; else arch_chroot \u0026#34;grub-install --target=i386-pc ${BOOT_MNT}\u0026#34; fi arch_chroot \u0026#34;grub-mkconfig -o /boot/grub/grub.cfg\u0026#34; # Installation finished read_input_text \u0026#34;Installation finished. Reboot system\u0026#34; if [[ $OPTION != y ]]; then arch-chroot /mnt exit 0 fi umount -R /mnt reboot exit 0 前置作業 只有一顆安裝 Windows 的硬碟，參閱 硬碟分割與調整 增加分割區( 對於新手，建議加購硬碟) 下載 ISO 檔 Windows作業系統製作 USB安裝碟 Ventoy USB開機隨身碟製作，Ventoy 教學 Etcher USB開機隨身碟製作，Etcher 教學\n基礎安裝 雖然已有 archinstall，但還是覺得煩瑣。 因此寫 bash，歡迎有志青年來接棒。底下 bash，僅是基礎安裝(base install，又稱最小安裝，minimal install)，參考了官網 Installation guide 寫成，archinstall 也可以完成，但要加裝 wget，以利後續桌面安裝。 請比較作者製作的 bash 檔 install.txt 與官網 Installation guide ，當 Installation guide 有重大變動時，執行bash可能有bug，就須小作修改了😎。底下只就一顆無資料的硬碟操作，Arch Linux 與 Windows 雙系統安裝可參閱 https://wusyong.github.io/posts/arch-dual-boot/，這個 bash 檔(install.txt)可修改成適合雙系統。 無線連接須自理 USB安裝碟開機(可參閱設置電腦用USB裝置開機)到 live environment 以 fdisk、parted 或 cfdisk 做硬碟分割 (可參閱Partition the Disk) curl -O https://diii.neocities.org/install.txt (下載作者的 install.txt) 第 99行 至 105行 偵測硬碟 UEFI 或 BIOS 模式，因此可sh install.txt後，在 第 114行 至 117行 結束 bash 編輯 install.txt，nano install.txt 或 vim install.txt (格式化分割區, 掛載分割區) UEFI模式：127行 至 130行\nmkfs.fat -F32 /dev/sda1 mkfs.ext4 -F /dev/sda2 mount /dev/sda2 /mnt mount --mkdir /dev/sda1 /mnt/boot BIOS模式：133行 至 135行\nBOOT_MNT=\u0026#34;/dev/sda\u0026#34; mkfs.ext4 -F /dev/sda1 mount /dev/sda1 /mnt sh install.txt (如最上圖) 建議下載 https://diii.neocities.org/install.txt， 以 nano 或 vim 或 Notepad++ 編輯 install.txt。將 install.txt 存於硬碟或USB隨身碟，啟動 live 環境時再掛載。\n重新開機 執行 sh install.txt 完成後，會重新開機。 萬事起頭難，正確開機後，桌面安裝就非常容易😲。\n桌面安裝 LXQt Xfce KDE\n","permalink":"https://diy99.github.io/papermod/posts/archlinux-base-install/","summary":"上圖，bash 執行過程 简体中文参阅 [bash]基础安装 作者的 bash 檔 install.txt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37","title":"[bash] Arch Linux Base Install - 基礎安裝"},{"content":"\r先完成 Arch Linux Base Install - 基礎安裝 官網Xfce，作者 bash 檔 xfce.txt\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 #!/bin/bash #-------------------------------- # Created by chuanjang(at)gmail(dot)com # Download: wget https://diii.neocities.org/xfce.txt # Usage: # chmod +x xfce.txt # sh xfce.txt # COLORS Reset=$(tput sgr0) # Regular Colors Red=$(tput setaf 1) Green=$(tput setaf 2) Yellow=$(tput setaf 3) Purple=$(tput setaf 5) Cyan=$(tput setaf 6) print_line() { #{{{ printf \u0026#34;%$(tput cols)s\\n\u0026#34;|tr \u0026#39; \u0026#39; \u0026#39;-\u0026#39; } #}}} read_input_text() { #{{{ read -p \u0026#34;$1 [y/N]: \u0026#34; OPTION OPTION=`echo \u0026#34;$OPTION\u0026#34; | tr \u0026#39;[:upper:]\u0026#39; \u0026#39;[:lower:]\u0026#39;` } #}}} pause_function() { #{{{ print_line read -e -sn 1 -p \u0026#34;Press enter to continue...\u0026#34; } #}}} sudo sh -c \u0026#34;pacman -Syu --noconfirm\u0026#34; #For Nvidia #sudo sh -c \u0026#34;pacman -S nvidia nvidia-settings --noconfirm\u0026#34; #Xorg and Xfce desktop sudo sh -c \u0026#34;pacman -S --noconfirm xorg-server xfce4\u0026#34; echo -e \u0026#34;\\n\\n\u0026#34; print_line read_input_text \u0026#34;Install ${Yellow}Pxfce4-goodies${Reset}: \u0026#34; if [[ $OPTION == y ]]; then sudo sh -c \u0026#34;pacman -S xfce4-goodies --noconfirm\u0026#34; fi echo -e \u0026#34;\\n\\nInstall ${Cyan}PulseAudio${Reset}\u0026#34; #Install additional components sudo sh -c \u0026#34;pacman -S --noconfirm network-manager-applet gvfs pulseaudio pulseaudio-alsa pavucontrol\u0026#34; #Install applications sudo sh -c \u0026#34;pacman -S --noconfirm firefox l3afpad\u0026#34; #Display Manager sudo sh -c \u0026#34;pacman -S --noconfirm sddm\u0026#34; #Autologin sudo sh -c \u0026#34;mkdir -p /etc/sddm.conf.d\u0026#34; sudo sh -c \u0026#34;echo \u0026#39;[Autologin]\u0026#39; \u0026gt;\u0026gt; /etc/sddm.conf.d/autologin.conf\u0026#34; sudo sh -c \u0026#34;echo \u0026#39;User=$USER\u0026#39; \u0026gt;\u0026gt; /etc/sddm.conf.d/autologin.conf\u0026#34; sudo sh -c \u0026#34;echo \u0026#39;Session=xfce\u0026#39; \u0026gt;\u0026gt; /etc/sddm.conf.d/autologin.conf\u0026#34; sudo sh -c \u0026#34;echo \u0026#39;[General]\u0026#39; \u0026gt;\u0026gt; /etc/sddm.conf\u0026#34; sudo sh -c \u0026#34;echo \u0026#39;Numlock=on\u0026#39; \u0026gt;\u0026gt; /etc/sddm.conf\u0026#34; sudo sh -c \u0026#34;systemctl enable sddm\u0026#34; echo -e \u0026#34;\\n${Cyan}SDDM${Reset} installed and set ${Green}Autologin${Reset} \u0026amp; ${Green}NumLock${Reset}\\n\u0026#34; pause_function wget https://diii.neocities.org/localize.txt chmod +x localize.txt sh localize.txt rm -rf localize.txt echo -e \u0026#34;\\nMust reboot to enable setting.\u0026#34; pause_function reboot exit 0 安裝 以具有 sudo 權限之使用者登入 wget https://diii.neocities.org/xfce.txt chmod +x xfce.txt sh xfce.txt\n後續 重啟後自動登入, 可刪除 chi_in.txt, fonts.txt, xfce.txt, setlang.txt, 也可以使用文字編輯器查看 顯示管理器SDDM已安裝並設置自動登入、啟用數字鎖定鍵 PulseAudio 聲音伺服器已安裝 已安裝 Firefox 及 文字編輯器 L3afpad 設置Xfce啟用數字鎖定鍵的方法，於 xfce4-terminal 貼上 (如最上圖)\nl3afpad ~/.config/xfce4/xfconf/xfce-perchannel-xml/keyboards.xml 增加\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;channel name=\u0026#34;keyboards\u0026#34; version=\u0026#34;1.0\u0026#34;\u0026gt; \u0026lt;property name=\u0026#34;Default\u0026#34; type=\u0026#34;empty\u0026#34;\u0026gt; \u0026lt;property name=\u0026#34;Numlock\u0026#34; type=\u0026#34;bool\u0026#34; value=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;/channel\u0026gt; (此步驟可不作)建立文檔、下載\u0026hellip;及本地化使用者目錄\nsudo pacman -S xdg-user-dirs xdg-user-dirs-update Arch 使用者儲存庫 (AUR) 於 xfce4-terminal\nsudo pacman -S git fakeroot make gcc git clone https://aur.archlinux.org/yay.git cd yay makepkg -si cd .. 例：安裝 Google Chrome\nyay -S google-chrome ","permalink":"https://diy99.github.io/papermod/posts/xfce/","summary":"先完成 Arch Linux Base Install - 基礎安裝 官網Xfce，作者 bash 檔 xfce.txt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46","title":"Arch Linux Xfce 安裝+SDDM自動登入+Fcitx5輸入法"},{"content":"\r先完成 Arch Linux Base Install - 基礎安裝 官網LXQt，作者 bash 檔 lxqt.txt\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 #!/bin/bash #-------------------------------- # Created by chuanjang(at)gmail(dot)com # Download: wget https://diii.neocities.org/lxqt.txt # Usage: # chmod +x lxqt.txt # sh lxqt.txt # COLORS Reset=$(tput sgr0) # Regular Colors Red=$(tput setaf 1) Green=$(tput setaf 2) Yellow=$(tput setaf 3) Purple=$(tput setaf 5) Cyan=$(tput setaf 6) print_line() { #{{{ printf \u0026#34;%$(tput cols)s\\n\u0026#34;|tr \u0026#39; \u0026#39; \u0026#39;-\u0026#39; } #}}} read_input_text() { #{{{ read -p \u0026#34;$1 [y/N]: \u0026#34; OPTION OPTION=`echo \u0026#34;$OPTION\u0026#34; | tr \u0026#39;[:upper:]\u0026#39; \u0026#39;[:lower:]\u0026#39;` } #}}} pause_function() { #{{{ print_line read -e -sn 1 -p \u0026#34;Press enter to continue...\u0026#34; } #}}} sudo sh -c \u0026#34;pacman -Syu --noconfirm\u0026#34; #For Nvidia #sudo sh -c \u0026#34;pacman -S nvidia nvidia-settings --noconfirm\u0026#34; #Xorg and pipewire low-level multimedia framework sudo sh -c \u0026#34;pacman -S xorg-server --noconfirm\u0026#34; #LXQt desktop , breeze-icons, Trash gvfs sudo sh -c \u0026#34;pacman -S lxqt oxygen-icons xdg-utils gvfs --noconfirm\u0026#34; #Install additional components sudo sh -c \u0026#34;pacman -S network-manager-applet xscreensaver --noconfirm\u0026#34; #Install applications sudo sh -c \u0026#34;pacman -S firefox l3afpad --noconfirm\u0026#34; #Display Manager (SDDM) sudo sh -c \u0026#34;pacman -S --noconfirm sddm\u0026#34; #Autologin sudo sh -c \u0026#34;mkdir -p /etc/sddm.conf.d\u0026#34; sudo sh -c \u0026#34;echo \u0026#39;[Autologin]\u0026#39; \u0026gt;\u0026gt; /etc/sddm.conf.d/autologin.conf\u0026#34; sudo sh -c \u0026#34;echo \u0026#39;User=$USER\u0026#39; \u0026gt;\u0026gt; /etc/sddm.conf.d/autologin.conf\u0026#34; sudo sh -c \u0026#34;echo \u0026#39;Session=lxqt\u0026#39; \u0026gt;\u0026gt; /etc/sddm.conf.d/autologin.conf\u0026#34; sudo sh -c \u0026#34;echo \u0026#39;[General]\u0026#39; \u0026gt;\u0026gt; /etc/sddm.conf\u0026#34; sudo sh -c \u0026#34;echo \u0026#39;Numlock=on\u0026#39; \u0026gt;\u0026gt; /etc/sddm.conf\u0026#34; sudo sh -c \u0026#34;systemctl enable sddm\u0026#34; echo -e \u0026#34;\\n${Cyan}SDDM${Reset} installed and set ${Green}Autologin${Reset} \u0026amp; ${Green}NumLock${Reset}\\n\u0026#34; pause_function wget https://diii.neocities.org/localize.txt chmod +x localize.txt sh localize.txt rm -rf localize.txt echo -e \u0026#34;\\nMust reboot to enable setting.\u0026#34; pause_function reboot exit 0 安裝 以具有 sudo 權限之使用者登入 wget https://diii.neocities.org/lxqt.txt chmod +x lxqt.txt sh lxqt.txt\n後續 重啟後自動登入, 可刪除 chi_in.txt, fonts.txt, lxqt.txt, setlang.txt, 也可以使用文字編輯器查看 顯示管理器SDDM已安裝並設置自動登入、啟用數字鎖定鍵 已安裝 Firefox 及 文字編輯器 L3afpad 設置LXQt啟用數字鎖定鍵的方法，於 QTerminal 貼上 (如最上圖)\nl3afpad ~/.config/lxqt/session.conf 增加\n[Keyboard] numlock=true 建議安裝APP\nsudo pacman -S smplayer yt-dlp Arch 使用者儲存庫 (AUR) 於 QTerminal\nsudo pacman -S git fakeroot make gcc git clone https://aur.archlinux.org/yay.git cd yay makepkg -si cd .. 例：安裝 Google Chrome\nyay -S google-chrome ","permalink":"https://diy99.github.io/papermod/posts/lxqt/","summary":"先完成 Arch Linux Base Install - 基礎安裝 官網LXQt，作者 bash 檔 lxqt.txt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46","title":"Arch Linux LXQt 安裝+SDDM自動登入+Fcitx5輸入法"},{"content":"圖片瘦身重要性 手機相片檔案很大，直接放罝於網頁，會造成瀏覽頁面時速度變慢，進而影響網站效能。 相機內的相片，如果有特別喜歡的就要保留原來檔案，勿於瘦身後刪除。\n常用的網頁圖片格式 JPEG(.jpg)：特別適合儲存照片和網頁圖像，相片通常是JPEG格式 PNG(.png)：PNG 格式的檔案通常比JPEG大，但可以提供更好的網頁圖片品質。 WebP(.webp)：WebP 格式的檔案通常比JPEG小，同時保持相對較高的網頁圖片品質。LINE 未支援 WebP😝\nImageMagick 安裝 ImageMagick 是圖片瘦身好幫手 Windows 作業系統 建立 D:\\App資料夾，沒有D槽可參閱硬碟分割與調整 前往 ImageMagick Windows Binary Release，下載 ImageMagick-7.1.1-21-portable-Q16-x64.zip(7.1.1-21是作者下載時的版本號碼)， 可能要再安裝 Visual C++ Redistributable Package 解壓縮至 D:\\App\\ImageMagick Arch Linux 作業系統\nsudo pacman -S imagemagick 圖片瘦身方法 以 jpg 轉換至 webp 為主，詳閱之後，你會發現稍加修改，各種格式的轉換都非常容易。而使用 Notepad++ 編輯指令，再貼至 cmd 或 Git Bash 執行，更能輕鬆駕馭指令。 開啟 cmd 或 Git Bash (底下操作，cmd、Git Bash 皆適用)，可使用 FastStone Image Viewer 比較圖片瘦身前後的差異 例如要轉換 D:\\相簿\\旅遊 內的全部相片，先切換至資料夾\ncd \u0026#34;D:\\相簿\\旅遊\u0026#34; 作者的手機相片影像大小 4096×2304(16:9)、解析度 72dpi，作者的 SONY 電視 KDL-42W700B 幕解析度 Full HD 1920×1080，1920÷4096=0.4688，因此於 cmd 或 Git Bash 貼上指令\n\u0026#34;D:\\App\\ImageMagick\\mogrify\u0026#34; -format jpg -resize 46.88% -quality 85 *.jpg 小心，上面指令會覆蓋原來的 jpg 檔。將-format jpg改為-format webp後會生成 .webp，而原來 jpg 檔還在。因此若將上面指令的*.jpg改為*.webp就可以轉換 webp 成 jpg。 -quality 85，圖片品質 85與100，人眼幾乎無法辨識兩者。解析度 72dpi，可使用參數 -density 改變。 4K電視 幕解析度 3840×2160，是 Full HD 的寬、高各兩倍。1920近似值2000，所以3840就接近4000 - 4K\n有時侯資料夾內檔案太多或不要覆蓋原來的 jpg 檔，就先建立 D:\\相簿\\tmp 資料夾，生成檔案至此資料夾，指令改成(只多了-path D:/相簿/tmp/)\n\u0026#34;D:\\App\\ImageMagick\\mogrify\u0026#34; -path D:/相簿/tmp/ -format jpg -resize 46.88% -quality 85 *.jpg 網頁圖片1920×1080似乎有些大，作者考慮 1120×630，1120÷1920=0.5833，所以轉換成 webp 的指令為\n\u0026#34;D:\\App\\ImageMagick\\mogrify\u0026#34; -format webp -resize 58.33% -quality 80 *.jpg 參考資料 網頁設計常見問答 像素與解析度 Mogrify - ImageMagick – Command-line Tools ImageMagick 批次處理圖片 Optimizing your Images for the Web ImageMagick – WebP Encoding Options 什麼是4K電視\n","permalink":"https://diy99.github.io/papermod/posts/imagemagick-webp/","summary":"圖片瘦身重要性 手機相片檔案很大，直接放罝於網頁，會造成瀏覽頁面時速度變慢，進而影響網站效能。 相機內的相片，如果有特別喜歡的就要保留原來檔案，","title":"ImageMagick Mogrify WebP 圖片瘦身"},{"content":" For example, Font Awesome 6.4.2 Free for Web Download Font Awesome from https://fontawesome.com/download, default version 6 (can select older versions), click [Free for Web] Unzip, copy fontawesome-free-6.4.2-web\\css\\all.min.css into .(site root)\\assets\\css\\extended folder. Edit \\assets\\css\\extended\\all.min.css, replace all\n../webfonts/ with\n../../webfonts/ Copy subfolder webfonts of fontawesome-free-6.4.2-web into .(site root)\\static\n","permalink":"https://diy99.github.io/papermod/posts/papermod-font-awesome-en/","summary":"For example, Font Awesome 6.4.2 Free for Web Download Font Awesome from https://fontawesome.com/download, default version 6 (can select older versions), click [Free for Web] Unzip, copy fontawesome-free-6.4.2-web\\css\\all.min.css into .(site root)\\assets\\css\\extended folder. Edit \\assets\\css\\extended\\all.min.css, replace all\n../webfonts/ with\n../../webfonts/ Copy subfolder webfonts of fontawesome-free-6.4.2-web into .(site root)\\static","title":"[en] Hugo PaperMod Font Awesome"},{"content":" 以 Font Awesome 6.4.2 Free for Web 為例\n下載 前往 https://fontawesome.com/download，預設變版本6 (可以選擇舊版)，按 [Free for Web] 下載 更多資訊可參閱 如何使用 Font Awesome Icon\n安裝 解壓縮後，複製 fontawesome-free-6.4.2-web\\css\\all.min.css 至 \\assets\\css\\extended (省略了D:\\MyData\\blog) 資料夾內，編輯 \\assets\\css\\extended\\all.min.css，將\n../webfonts/ 全部取代為\n../../webfonts/ 複製 fontawesome-free-6.4.2-web 的子資料夾 webfonts 至 \\static (省略了D:\\MyData\\blog) 資料夾內\n","permalink":"https://diy99.github.io/papermod/posts/papermod-font-awesome/","summary":"以 Font Awesome 6.4.2 Free for Web 為例 下載 前往 https://fontawesome.com/download，預設變版本6 (可以選擇舊版)，按 [Free for Web] 下載 更多資","title":"Hugo PaperMod Font Awesome"},{"content":"選擇 Google Font 前往 https://fonts.google.com/ 選擇中文字型，可參閱 Google Fonts 網路中文/英文字型應用\n安裝 Google Font 以 Noto Serif TC 為例，因為也要使用简体，所以加入 Noto Serif SC 複製 \\themes\\papermod\\layouts\\partials\\extend_head.html 至 \\layouts\\partials\\extend_head.html 編輯 \\layouts\\partials\\extend_head.html，於最後加上\n\u0026lt;link href=\u0026#34;https://fonts.googleapis.com/css2?family=Noto+Serif+TC:wght@500;700\u0026amp;family=Noto+Serif+SC:wght@500;700\u0026amp;display=swap\u0026#34; rel=\u0026#34;stylesheet\u0026#34;\u0026gt; 將代碼存至 \\assets\\css\\extended\\custom.css\nbody { font-family: \u0026#39;Noto Serif TC\u0026#39;, \u0026#39;Noto Serif SC\u0026#39;, serif; } 參考資料 Google Font in Papermod Theme ","permalink":"https://diy99.github.io/papermod/posts/papermod-google-font/","summary":"選擇 Google Font 前往 https://fonts.google.com/ 選擇中文字型，可參閱 Google Fonts 網路中文/英文字型應用 安裝 Google Font 以 Noto Serif TC 為例，因為也要使用简体，所以加入 Noto Serif SC 複製 \\themes\\papermod\\layouts\\partials\\extend_head.html 至 \\layouts\\partials\\extend_head.html 編輯 \\layou","title":"Hugo PaperMod Google Font"},{"content":" PaperMod 作者的 wiki，一定要看，底下僅就 FAQs\n覆蓋主題模板 詳 Override theme template 勿直接修改 \\themes\\papermod\\layouts 內的 html 檔 例如: 複製 \\themes\\papermod\\layouts\\partials\\header.html 至 \\layouts\\partials\\header.html 編輯 \\layouts\\partials\\header.html 就可以取代 \\themes\\papermod\\layouts\\partials\\header.html 的內容\n自訂 CSS 詳 Bundling Custom css with theme\u0026rsquo;s assets 建立 \\assets\\css\\extended 資料夾，將自訂的 CSS 檔放在資料夾內即可。\n自訂 Head / Footer 詳 Custom Head / Footer\n文章置頂 詳 Pin a Post 在文章的 Front Matter 設置 weight: 1\n自訂網站Logo 詳 Adding Custom Favicon(s) 本站Logo 就是 若要製作文字Logo，PhotoCap 很不錯。 下載 PhotoCap，Photocap 製作文字類型的浮水印簽名檔、Logo 圖檔 將 製作好的 PNG(512x512) 交由 Favicon.io 生成，解壓縮放在 \\static 資料夾\n圖片置中 詳 Centering image in markdown 在圖片之後加上 center\n![name](path/to/image.png#center) ","permalink":"https://diy99.github.io/papermod/posts/papermod-faqs/","summary":"PaperMod 作者的 wiki，一定要看，底下僅就 FAQs 覆蓋主題模板 詳 Override theme template 勿直接修改 \\themes\\papermod\\layouts 內的 html 檔 例如: 複製 \\themes\\papermod\\layouts\\partials\\header.html 至 \\layouts\\partials\\header.html 編輯 \\layouts\\partials\\header.html 就可以取代 \\themes\\papermod\\layouts\\partials\\header.html 的內容 自訂 CSS 詳 Bundling Custom css with theme\u0026rsquo;s assets 建","title":"PaperMod FAQs"},{"content":"Hugo 與 Markdown Markdown 是一種輕量級標記式語言，具易讀易寫特性，並且對於圖片，圖表、數學式都有支援，目前許多網站都廣泛使用Markdown來撰寫說明文件或是用於論壇上發表訊息。學習Markdown可參閱 Markdown Tutorial - Introduction 及 Markdown文件\nHugo 使用 Markdown 編寫文章，更多資訊請參閱 Configure markup | Hugo\nPaperMod 與 Markdown Hugo 主題作者都會提供 Markdown 範例網頁甚至原始碼，以利安裝者使用參考 MemE 範例網頁 PaperMod Markdown 範例網頁、PaperMod Markdown 原始碼。但作者測試原始碼時，文章目錄的顯示有些問題，是新版 Hugo 還是作者的 config.yml 設置出問題？ PaperMod 作者佛心來著，提供範例網頁原始碼 可直接使用 Emoji，可至 Emoji 列表 挑選 使用 Shortcode(短代碼) 貼上 YouTube、Vimeo 影片\n{{\u0026lt; youtube ZJthWmvUzzc \u0026gt;}} 結果 {{\u0026lt; vimeo_simple 48912912 \u0026gt;}} 結果 PaperMod 與 HTML 只使用 Markdown 語言，會覺得無色彩，因此就要加入 HTML，給它好看🌺 因為作者的 PaperMod 設置 config.yml (這也是 Hugo 與 Markdown 的 Configure markup | Hugo) 128至133行是\nmarkup: goldmark: renderer: unsafe: true highlight: noClasses: false ∴PaperMod Markdown 可以混搭 HTML span 是經常使用的，可參閱 HTML span Tag 及 HTML Color Picker ，例如\n\u0026lt;span style=\u0026#34;font-size:32px;font-weight:bold;color:#0000FF;\u0026#34;\u0026gt;傳統\u0026lt;/span\u0026gt;_中文_\u0026lt;br\u0026gt; \u0026lt;span style=\u0026#34;font-size:32px;font-weight:bold;color:#FF0000;\u0026#34;\u0026gt;简体\u0026lt;/span\u0026gt;**中文** 結果:\n傳統中文\n简体中文\n","permalink":"https://diy99.github.io/papermod/posts/papermod-markdown/","summary":"Hugo 與 Markdown Markdown 是一種輕量級標記式語言，具易讀易寫特性，並且對於圖片，圖表、數學式都有支援，目前許多網站都廣泛使用Markdown來撰寫說明文件或是","title":"PaperMod Markdown"},{"content":" 啟動 hugo server -D，邊閱讀本頁邊檢視 localhost:1313 選單是Hugo所有主題(theme)的重頭戲，更多資訊可參閱 Hugo 官網 Menus | Hugo 在 \\content (省略了D:\\MyData\\blog) 資料夾內增加兩個子資料夾 categories, tags 將代碼存至 \\content\\categories\\_index.md\n--- title: \u0026#34;分類\u0026#34; layout: categories summary: categories --- 將代碼存至 \\content\\tags\\_index.md\n--- title: \u0026#34;標籤\u0026#34; layout: tags summary: tags --- 在 \\content ) 資料夾內增加三個檔案 archives.md, search.md, about.md，內容如下： archives.md\n--- title: \u0026#34;歸檔\u0026#34; layout: \u0026#34;archives\u0026#34; summary: \u0026#34;Archive\u0026#34; --- search.md\n--- title: \u0026#34;搜尋\u0026#34; layout: \u0026#34;search\u0026#34; summary: \u0026#34;search\u0026#34; --- about.md(修改自 Sulv\u0026rsquo;s Blog)\n--- title: \u0026#34;關於\u0026#34; layout: about date: 2023-09-12 hidemeta: true description: \u0026#34;\u0026#34; draft: false # 是否為草稿 comments: false reward: false showToc: false # 顯示目錄 TocOpen: false # 自動展開目錄 disableShare: true # 底部不顯示分享欄 showbreadcrumbs: false searchHidden: true cover: image: \u0026#34;\u0026#34; caption: \u0026#34;\u0026#34; alt: \u0026#34;\u0026#34; relative: false --- About 編輯 config.yml 第113至124行\n- identifier: categories name: categories url: /categories/ weight: 10 - identifier: tags name: tags url: /tags/ weight: 20 - identifier: example name: example.org url: https://example.org weight: 30 成為\n- identifier: archives name: 歸檔 url: /archives/ weight: 10 - identifier: categories name: 分類 url: /categories/ weight: 20 - identifier: tags name: 標籤 url: /tags/ weight: 30 - identifier: about name: 關於 url: /about/ weight: 40 - identifier: search name: 搜尋 url: /search/ weight: 50 outputs: home: - HTML - RSS - JSON # is necessary 最後5行因 search 而增加 使用 Font Awesome ( 要先安裝) 的方法，可參閱 Menu Example | Hugo 雖然可以使用複製、貼上功能編輯 config.yml，強烈建議自己作一遍，因為你可能會增刪。增刪時要非常注意格式，例如：- identifier: archives 前面有四個空白鍵「space」，不可多也不可少，文章的 Front Matter 有空白鍵也是，才不致 Error\n\\content 內的子資料夾都要建立 _index.md 檔，將代碼存至 \\content\\posts\\_index.md\n--- title: \u0026#34;文章\u0026#34; # description: \u0026#34;\u0026#34; hidemeta: true # 是否隱藏文章的原訊息，如發佈日期、作者等 --- ","permalink":"https://diy99.github.io/papermod/posts/papermod-menu/","summary":"啟動 hugo server -D，邊閱讀本頁邊檢視 localhost:1313 選單是Hugo所有主題(theme)的重頭戲，更多資訊可參閱 Hugo 官網 Menus | Hugo 在 \\content (省略了D:\\MyData\\bl","title":"PaperMod 選單"},{"content":"Git Bash名稱 Git for Windows 提供了BASH模擬，用於從命令列執行 Git，啟動程式是 git-bash.exe。 Git Bash 提供源自 Linux/Unix 指令操作Window 檔案系統，更可以將靜態網頁 Push 上傳到 GitHub。\n安裝 建立D:\\App資料夾(選擇性) 前往 Git - Downloading Packag，按 64-bit Git for Windows Portable 下載 開啟 PortableGit-2.42.0.2-64-bit.7z.exe (作者下載時的版本，這是以7-Zip打包的可執行檔)，將安裝的資料夾改為 D:\\App\\PortableGit ➜ 按 [OK] 複製D:\\App\\PortableGit\\內的git-bash.exe，至上一層D:\\App，貼上捷徑\n開啟 git-bash 作設定 按滑鼠右鍵 按 [Window] ➜ UI language 選取 [zh_TW] ➜ 按 [Apply] ➜ 按 [Save] 輸入 echo $PATH (可複製再貼至git-bash)，git-bash的複製、貼上快速鍵分別為 Ctrl+Ins、Shift+Ins wget 安裝與測試 前往GNU Wget下載 x64 EXE 由 echo $PATH 得知將 wget.exe 移至 D:\\App\\PortableGit\\usr\\bin\\ 內 於 git-bash 貼上wget https://diii.neocities.org/img/git02.webp下載上一張圖片做測試\n執行Bash 將底下 shell script 以原始碼編輯器(如Notepad++)存至 D:\\App\\PortableGit\\hello.sh，於 git-bash 貼上sh hello.sh執行( Windows 不需chmod +x hello.sh)\n#!/bin/bash Reset=$(tput sgr0) Blue=$(tput setaf 4) echo -e \u0026#34;Hello ${Blue}World${Reset}!\u0026#34; 如同cmd快速進入中文資料夾，於 git-bash 貼上cd \u0026quot;D:\\相簿\\登山\u0026quot; GitHub SSH 連線 如果檔案不上傳至 GitHub，以下操作可不作😁。 前往 GitHub 註冊，連線有 SSH 與 HTTPS 兩種，底下只說明 SSH 方法，更多資訊可參閱使用 SSH 连接到 GitHub 設定使用者的 Email 及使用者名稱，可再參閱使用者設定 於 git-bash 貼上git config --global user.email \u0026quot;you@example.com\u0026quot; ，you@example.com 改為你的 於 git-bash 貼上git config --global user.name \u0026quot;Your Name\u0026quot; ，Your Name 改為你的 生成 SSH 公鑰匙和私鑰匙 於 git-bash 貼上ssh-keygen，會在 C:\\Users\u0026lt;span style=\u0026ldquo;color:#FF6666\u0026rdquo;\u0026gt;your_name\\.ssh 資料夾裡生成 id_rsa, id_rsa.pub 兩個檔案。id_rsa.pub是公開金鑰，id_rsa是私密金鑰 於 git-bash 貼上cat ~/.ssh/id_rsa.pub顯示剛剛建立的公鑰，並且複製。 id_rsa.pub 也可以使用Notepad++開啟。 將 公鑰 貼到 GitHub SSH keys 按 New SSH key ➜ 於 Key 欄位 貼上 ➜ 按 Add SSH key 測試 GitHub SSH 連線 於 git-bash 貼上ssh -T git@github.com，過程如下：\nAre you sure you want to continue connecting (yes/no/[fingerprint])? 輸入 yes\nWarning: Permanently added 'github.com' (ED25519) to the list of known hosts. Hi diy99! You've successfully authenticated, but GitHub does not provide shell access.\n","permalink":"https://diy99.github.io/papermod/posts/git-bash/","summary":"Git Bash名稱 Git for Windows 提供了BASH模擬，用於從命令列執行 Git，啟動程式是 git-bash.exe。 Git Bash 提供源自 Linux/Unix 指令操作Window 檔案系","title":"Git Bash for Windows"},{"content":"原始碼編輯器的功能 工欲善其事，必先利其器。🙂雜七雜八的記事與🙃寫程式免不了使用原始碼編輯器(source code editor)，作者已習慣Notepad++，Visual Studio Code也很好用。cmd命令可輕鬆於Notepad++編輯，再貼至cmd執行。更可編輯Git Bash命令，再貼至Git Bash執行。 建立D:\\App資料夾\n下載與安裝 前往Notepad++ 選取您要的版本，選取 64-bit x64 之Portable (zip) ，作者下載時為npp.8.5.6.portable.x64.zip，解壓縮至D:\\App\\Notepad++(可複製) 按 解壓縮(E) 於D:\\App資料夾增加Notepad++捷徑 以檔案總管複製D:\\App\\Notepad++\\內的notepad++.exe，至上一層D:\\App，按滑鼠右鍵，貼上捷徑(S) 開啟Notepad++作設定 滑鼠選取notepad++ - 捷徑，按 Enter。 按 [Settings] ➜ 按 [Preferences] ➜ Localization 選取 [台灣繁體] ➜ 按 [儲存並關閉] 按 [外掛] ➜ 按 [管理外掛模組] ➜ 勾選 [Explorer] 按右上角 [安裝] ➜ 按 [是] 按 [外掛] ➜ [Explorer] ➜ 按 [Explorer] 按 [設定 ] ➜ [偏好設定] ➜ 雲端連結 ➜ 取消勾選 [將連結設為可點擊] ➜ 按 [儲存並關閉]\n編輯區字型與字體 按 [設定] ➜ 按 [語法配置樣式器\u0026hellip;] ➜ 樣式: 選取 Default Stlye ➜ 字型名稱 (選取你要的) ➜ 字型大小 (選取你要的) ➜ 按 [儲存並關閉]\n","permalink":"https://diy99.github.io/papermod/posts/notepad++/","summary":"原始碼編輯器的功能 工欲善其事，必先利其器。🙂雜七雜八的記事與🙃寫程式免不了使用原始碼編輯器(source code editor)，作者已習慣Note","title":"Notepad++ 原始碼編輯器"},{"content":"建立D:\\App資料夾 建立 D:\\App資料夾 存放應用程式(application program，簡寫為APP)與捷徑，沒有D槽可參閱硬碟分割與調整 以檔案總管將D:\\App釘選到 快速存取，或在桌面建立D:\\App資料夾捷徑\n建立cmd捷徑 於D:\\App新增捷徑，複製 C:\\Windows\\System32\\cmd.exe 至 [輸入項目的位置] ➜ 按 [下一步] ➜ 按 [完成] 選取 cmd，按滑鼠右鍵，按[內容(R)]，於[開始位置(S)]輸入 D:\\ (∵要使用D槽)，按 [確定] 開啟cmd 滑鼠選取 cmd，按 Enter💯(也可以滑鼠左鍵連按兩下 這種操作不太好)，爾後就很容易至D:\\App快速開啟cmd。 cmd快速進入中文資料夾 例如: 檔案總管建立 D:\\相簿\\登山 資料夾，按 網址列，按 Ctrl+C 複製 貼至 原始碼編輯器(如Notepad++) ，再編輯為cd \u0026quot;D:\\相簿\\登山\u0026quot; 自Notepad++複製cd \u0026quot;D:\\相簿\\登山\u0026quot;，貼至cmd，按 Enter。 Linux終端(terminal)也可以快速進入目錄，下圖 Arch Linux LXQt桌面 ","permalink":"https://diy99.github.io/papermod/posts/app-folder/","summary":"建立D:\\App資料夾 建立 D:\\App資料夾 存放應用程式(application program，簡寫為APP)與捷徑，沒有D槽可參閱硬碟分割","title":"應用程式APP資料夾"},{"content":"一般而言，安裝Windows時，就只有C槽。硬碟分割與調整工具可以增加D槽以存放可攜式(portable,又稱免安裝)程式及資料，作者的Windows系統只分配60G。要安裝Windows、Arch Linux雙系統時，也須使用硬碟分割工具，因此本文就特別重要。\n✨MiniTool® Partition Wizard Free 💡 可以將硬碟MBR轉換為GPT並保留所有檔案\n下載MiniTool® Partition Wizard Free\nMiniTool Partition Wizard 教學\n✨DiskGenius 下載DiskGenius (繁體中文、简体中文) DiskGenius 无损分区大小调整 教程 备份分区 教程 从镜像文件还原分区 教程 制作DiskGenius WinPE USB启动盘 教程 免費，可於 Windows 及 WinPE 執行\n✨IM-Magic Partition Resizer 💡 IM-Magic Partition Resizer 官網 下載IM-Magic Partition Resizer Free(portable)，含中文版\n✨AOMEI Partition Assistant 下載AOMEI Partition Assistant AOMEI Partition Assistant教學\n✨GParted 下載GParted GParted教學\n","permalink":"https://diy99.github.io/papermod/posts/disk-partition/","summary":"一般而言，安裝Windows時，就只有C槽。硬碟分割與調整工具可以增加D槽以存放可攜式(portable,又稱免安裝)程式及資料，作者的Wi","title":"硬碟分割與調整"},{"content":"Audacious 的介面大致模仿了Foobar2000，跨平臺APP。\n於 Arch Linux 安裝\npacman -S audacious 於其它作業系統的安裝，可參閱 Download Audacious 因為 Arch Linux 大部分桌面預設安裝 PulseAudio 聲音伺服器，因此開啟 Audacious 檔案 ➜ 設定 ➜ 音訊 ➜ 輸出外掛 選擇 PulseAudio輸出 (原來預設 PipeWire)\n","permalink":"https://diy99.github.io/papermod/posts/audacious/","summary":"Audacious 的介面大致模仿了Foobar2000，跨平臺APP。 於 Arch Linux 安裝 pacman -S audacious 於其它作業系統的安裝，可參閱 Download Audacious 因為 Arch Linux 大部分桌面預設安裝 PulseAudio 聲音伺服器","title":"Audacious 音樂播放"}]